#!/bin/bash
# test for input
if [ -z "$1" ]
  then
echo ""
    echo "Just give the name designation for the vpc, like $0 <name> <VPC>  <URl to test against>."
    echo "This will create a user to attach to the secure subnet."
echo ""
exit
fi
source VAR
if [ ! -d "${out}/${2}" ] ; then
echo "no vpc called ${2} to launch into"
echo ""
exit
fi

rm -rf ${client_init}.gz
client_region=(`cat ${out}/${2}/region`)

echo "region set to: $client_region"
if [ "$client_region" = "us-east-1" ] 
then
ami="$eclientami" 
keyname="$ekeyname"
else
# region is west be west, change or add in VAR (run cpconfig)
ami="$wclientami"
keyname="$wkeyname"
fi
# here we go
vpcid=$(awk '/VpcId/ {print $2;}' ${appout}/$2/vpc | sed 's/"//g' | sed 's/,//g')
subnetid=$(awk '/SubnetId/ {print $2;}' ${appout}/$2/subnet0 | sed 's/"//g' | sed 's/,//g')
echo "Create user $1"
# init script prepped, launch instance with it
# launch script

echo "region set to: $client_region"
echo "$client_region" > ${appout}/client/${1}.region
# here we go
echo "Create user $1"
rm -rf ${appout}/client/${1}.dead
# init script prepped, launch instance with it
cat $client_head > $client_init
echo "echo -n \"${3} \" > /tag" >> $client_init
cat $client_tail >> $client_init
gzip $client_init

# launch script
$cmd run-instances --region $client_region --image-id $ami --key-name $keyname --user-data fileb://${client_init}.gz --instance-type $client_instancetype --subnet-id $subnetid --block-device-mappings file://${client_disk} > ${appout}/client/${1}.json 
echo "Initalizing."
sleep 5
Instance=$(awk '/InstanceId/ {print $2;}' ${appout}/client/${1}.json | sed 's/"//g' | sed 's/,//g')
$cmd create-tags --region $client_region --tags Key=Name,Value=client-${1} --resources $Instance
echo "Tagging $Instance as client $1"
echo "waiting for private IP"
blastoff=$(date)
$cmd describe-instances --region $client_region --instance-ids $Instance >> ${appout}/client/${1}.json
IP=$(awk '/PrivateIpAddress/ {print $2;}' ${appout}/client/${1}.json | head -n 1 | sed 's/"//g' | sed 's/,//g')
baseurl=https://$host/web_api
curl_cmd="curl --silent --insecure -X POST"

SID=`${curl_cmd} -H "Content-Type: application/json" -d @- $baseurl/login <<. | awk -F\" '/sid/ {print $4}'
{
  "user":"$username" ,
  "password":"$password" ,
  "session-name":"client added"
}
.`

sleep 4

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-host <<.
{
  "name" : "${1}",
  "ip-address" : "${IP}"
}
.

sleep 2

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/publish
#Logout
sleep 4
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/logout

echo "client-$1 deployed internally "
echo " client $1 is $Instance using $IP "
echo "$Instance launched at $blastoff, "
rm -rf ${client_init}.gz
echo " -> $0 ${1} COMMAND COMPLETE || "
exit 0
echo "$0 on ${1}" >> /tmp/auto.job
cat /tmp/auto.job | grep -v "$0 on ${1}" > /tmp/${1}.done
mv /tmp/${1}.done /tmp/auto.job

