#!/bin/bash
# test for input
if [ -z "$1" ]
  then
echo ""
    echo "require a name identifier for your client and the web domain target"
    echo "also define the client on the east or west region"
echo " something like  '$0 <name> app.domain.com east' will work"
    echo "This will create simulated user activity to the website"
echo ""
exit
fi

if [ -z "$2" ]
  then
echo ""
    echo "no target set"
    echo "This will create simulated user activity to a website with: $0 <any_name> <website> <region>"
echo ""
exit
fi

if [ -z "$3" ]
  then
echo ""
    echo "no location for the client use either east or west for the region"
    echo "This will create simulated user activity to a website with: $0 <any_name> <website> <region>"
echo ""
exit
fi

source VAR
echo "$0 on ${1}" >> /tmp/auto.job
rm -rf ${client_init}.gz

if [ "$3" = "east" ]
then
client_region="$eclient_region"
client_subnetid="$eclient_subnetid"
ami="$eclientami" 
keyname="$ekeyname"
# if region is west
elif [ "$3" = "west" ]
then
client_region="$wclient_region"
client_subnetid="$wclient_subnetid"
ami="$wclientami"
keyname="$wkeyname"
# or i don't know what this is
else
echo "where the heck is $3 suppose to be? your options are east or west."
echo ""
exit
fi
echo "region set to: $client_region"
echo "$client_region" > ${appout}/client/${1}.region
# here we go
echo "Create client $1"
rm -rf ${appout}/client/${1}.dead
# init script prepped, launch instance with it
cat $client_head > $client_init
echo "echo -n \"${2} \" > /tag" >> $client_init
cat $client_tail >> $client_init
gzip $client_init

# launch script
$cmd run-instances --region $client_region --image-id $ami --key-name $keyname --user-data fileb://${client_init}.gz --instance-type $client_instancetype --subnet-id $client_subnetid --block-device-mappings file://${client_disk} > ${appout}/client/${1}.json 
echo "Initalizing."
sleep 5
Instance=$(awk '/InstanceId/ {print $2;}' ${appout}/client/${1}.json | sed 's/"//g' | sed 's/,//g')
$cmd create-tags --region $client_region --tags Key=Name,Value=client-${1} --resources $Instance
echo "Tagging $Instance as client $1"
echo "waiting for public IP"
blastoff=$(date)
$cmd describe-instances --region $client_region --instance-ids $Instance >> ${appout}/client/${1}.json
IP=$(awk '/PublicIpAddress/ {print $2;}' ${appout}/client/${1}.json | sed 's/"//g' | sed 's/,//g')
baseurl=https://$host/web_api
curl_cmd="curl --silent --insecure -X POST"

SID=`${curl_cmd} -H "Content-Type: application/json" -d @- $baseurl/login <<. | awk -F\" '/sid/ {print $4}'
{
  "user":"$username" ,
  "password":"$password" ,
  "session-name":"client added"
}
.`

sleep 4

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-host <<.
{
  "name" : "${1}",
  "ip-address" : "${IP}"
}
.

sleep 2

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/publish
#Logout
sleep 4
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/logout

echo "client-$1 deployed"
echo " client $1 is $Instance using $IP"
echo "$Instance launched at $blastoff, "
echo "Aggressivly going after $2 "
rm -rf ${client_init}.gz
echo " -> $0 ${1} COMMAND COMPLETE || "
cat /tmp/auto.job | grep -v "$0 on ${1}" > /tmp/${1}.done
mv /tmp/${1}.done /tmp/auto.job
exit 0

