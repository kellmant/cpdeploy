#!/bin/bash
source VAR
ctrlip=(`curl -s ipecho.net/plain`)
	if [ -f /cpdeploy/.ctrlip ] ; then
read oldip </cpdeploy/.ctrlip
	if [ "${oldip}" -eq "${ctrlip}" ] ; then
	echo "policy is up to date"	
		exit 0
		else
echo -n "${ctrlip}" > /cpdeploy/.ctrlip
echo "applying new policy for ${ctrlip} from ${oldip}"
ctrlname="${domain}.cpdeploy"
baseurl=https://$host/web_api
curl_cmd="curl --silent --insecure -X POST"

SID=`${curl_cmd} -H "Content-Type: application/json" -d @- $baseurl/login <<. | awk -F\" '/sid/ {print $4}'
{
  "user":"$username" ,
  "password":"$password" ,
  "session-name":"controller login"
}
.`
# Login complete, add objects, rules and such here.
################################################################################################

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/set-host <<.
{
  "name" : "${ctrlname}",
  "ip-address" : "${ctrlip}"
}
.

 
################################################################################################
# Publish and get out of here
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/publish
sleep 5

#${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/install-policy <<.
# {
#   "policy-package" : "standard",
#   "access" : "true",
#   "threat-prevention" : "${install_value}",
#   "targets" : ""
# }
# .

#Logout
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/logout

echo " done. "
exit
fi
echo "can't find our last policy object, you probably haven't run"
echo "the 'first.config.app' for your new manager"
fi
exit 0
