#!/bin/bash
if [ -z "$1" ]
  then
echo ""
    echo "give a name for the remote VPN gateway $0 <name>"
    echo "This will add to group 'SecureVPC' for use in rules"
echo ""
exit
fi

source VAR
vpcid=$(awk '/VpcId/ {print $2;}' ${out}/${1}/vpc | sed 's/"//g' | sed 's/,//g')
subnetid0=$(awk '/SubnetId/ {print $2;}' ${out}/${1}/subnet0 | sed 's/"//g' | sed 's/,//g')
IP=$(awk '/PublicIpAddress/ {print $2;}' ${out}/${1}/pubip | sed 's/"//g' | sed 's/,//g')
subid=(`cat ${out}/${1}/id`)
baseurl=https://$host/web_api
curl_cmd="curl --silent --insecure -X POST"
echo "using gw name $gwname "

SID=`${curl_cmd} -H "Content-Type: application/json" -d @- $baseurl/login <<. | awk -F\" '/sid/ {print $4}'
{
  "user":"$username" ,
  "password":"$password" ,
  "session-name":"init_prep"
}
.`

# Login complete, add objects, rules and such here.
################################################################################################
sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-simple-gateway <<.
{
  "name" : "gw-${1}",
  "color" : "RED",
  "ipv4-address" : "${IP}",
  "version" : "R77.30",
  "one-time-password" : "$otp",
  "firewall" : "true",
  "vpn" : "true",
  "application-control" : "true",
  "url-filtering" : "true",
  "ips" : "true",
  "anti-bot" : "true",
  "anti-virus" : "true",
  "threat-emulation" : "true",
  "interfaces" : [ {
    "name" : "eth0",
    "ipv4-address" : "10.0.${subid}.254",
    "ipv4-network-mask" : "255.255.255.128",
    "ipv4-mask-length" : "25",
    "topology" : "external",
    "anti-spoofing" : "true",
    "anti-spoofing-settings" : {
      "action" : "prevent"
    },
    "security-zone" : "false"
  }, {
    "name" : "eth1",
    "ipv4-address" : "10.0.${subid}.10",
    "ipv4-network-mask" : "255.255.255.128",
    "ipv4-mask-length" : "25",
    "topology" : "internal",
    "topology-settings" : {
      "ip-address-behind-this-interface" : "network defined by the interface ip and net mask",
      "interface-leads-to-dmz" : "false"
    },
    "anti-spoofing" : "true",
    "anti-spoofing-settings" : {
      "action" : "prevent"
    },
    "security-zone" : "false"
  } ]
}
.

sleep 8

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-network <<.
{
  "name" : "${1}-${vpcid}",
  "subnet" : "10.0.${subid}.0",
  "subnet-mask" : "255.255.255.0"
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-network <<.
{
  "name" : "${1}-${subnetid0}",
  "subnet" : "10.0.${subid}.0",
  "subnet-mask" : "255.255.255.128"
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-host <<.
{
  "name" : "ext-gw-${1}",
  "ip-address" : "10.0.${subid}.254"
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/set-network <<.
{
  "name" : "${1}-${subnetid0}",
  "groups" : "SecureVPC"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/set-vpn-community-star <<.
{
  "name" : "SecureVPC-VPN",
  "satellite-gateways" : {
	"add" : "gw-${1}"
	}
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-rule <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "${1} ${subnetid0} Outbound",
  "source" : "${1}-${subnetid0}",
  "destination" : "Any",
  "service" : "Any",
  "action" : "Accept",
  "track" : "Full Log",
  "install-on" : "gw-${1}"
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-rule <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "Noise ${1} ${vpcid}",
  "source" : "${1}-${vpcid}",
  "destination" : "Any",
  "service" : "noisyapps",
  "action" : "Accept",
  "install-on" : "gw-${1}"
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-section <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-nat-section <<.
{
  "package" : "standard",
  "position" : "top",
  "name" : "gw-${1}"
}
.

sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-nat-rule <<.
{
  "package" : "standard",
  "position" : { "below" : "gw-${1}" },
  "enabled" : "true",
  "original-source" : "${1}-${subnetid0}",
  "translated-source" : "ext-gw-${1}",
  "method" : "hide",
  "install-on" : "gw-${1}"
}
.



################################################################################################
# Publish and get out of here
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/publish

sleep 5

#Logout
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/logout

rm -rf ${out}/${1}.nogw

exit 0
