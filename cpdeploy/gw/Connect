#!/bin/bash
# test for input
if [ -z "$1" ]
  then
echo ""
    echo "Just give the number of the automated site to deploy ex.: $0 5"
echo ""
exit
fi
source VAR
if [ ! -d "${out}/${1}" ] ; then
echo "no gateway to connect called ${1}"
echo ""
exit
fi
echo "Policy deploying to ${1}" >> /tmp/auto.job

# here we go
$api/BuildObjects ${1}
sleep 4
$api/BuildPolicy ${1} | grep nat-rule -B 1 | grep uid > ${out}/${1}/natuids
sleep 4
# check our work to see if the api is returning anything
if [ -s ${out}/${1}/natuids ] ; then
echo "Looks like the access policy rules were created, installing policy next."
$api/InstallPolicy ${1}
sleep 120
echo "Access policy applied, VPC active.  Applying threat protections. . . "
rm -rf ${out}/${1}.nogw
$api/InstallPolicy ${1} tp
echo "Threat protections applied, VPC Active and secured.  time to deploy applications."
echo " Connect process done, gateways may still be updating threat protections.. "
echo " -> $0 COMMAND COMPLETED. || "

cat /tmp/auto.job | grep -v "Policy deploying to ${1}" > /tmp/${1}.done
mv /tmp/${1}.done /tmp/auto.job

exit 0
#
else
echo "Something wrong with the policy, perhaps the gateway wasn't fully up?"
echo "backing out any changes that may have been applied"
echo " to the managment station. It doesn't look like the policy "
echo " api injection worked, so expect allot of errors in this next part."
echo "It won't hurt anything, but check your management "
echo "station after backout is complete."
sleep 12
Disconnect ${1}
sleep 4
echo "Backout of ${1} gateway complete. Please kill and redepoy,"
echo " If this continues to happen, verify the api server is "
echo "up and running on the management station with 'api status'"
echo ""
exit
fi
exit 0
#
#

