#!/bin/bash
if [ -z "$1" ]
  then
echo ""
    echo "Just give the number designation for the gateway, like $0 1"
    echo "This will build policy"
echo ""
exit
fi

source VAR
vpcid=$(awk '/VpcId/ {print $2;}' ${out}/${1}/vpc | sed 's/"//g' | sed 's/,//g')
subnetid0=$(awk '/SubnetId/ {print $2;}' ${out}/${1}/subnet0 | sed 's/"//g' | sed 's/,//g')
IP=$(awk '/PublicIpAddress/ {print $2;}' ${out}/${1}/pubip | sed 's/"//g' | sed 's/,//g')
baseurl=https://$host/web_api
curl_cmd="curl --silent --insecure -X POST"

SID=`${curl_cmd} -H "Content-Type: application/json" -d @- $baseurl/login <<. | awk -F\" '/sid/ {print $4}'
{
  "user":"$username" ,
  "password":"$password" ,
  "session-name":"api rules added"
}
.`
# Login complete, add objects, rules and such here.

sleep 5

################################################################################################

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-rule <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "${vpcid} App Access",
  "source" : "Any",
  "destination" : "ext-gw-${1}",
  "service" : "http",
  "action" : "Accept",
  "track" : "Full Log",
  "install-on" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-rule <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "${subnetid0} Outbound",
  "source" : "${subnetid0}",
  "destination" : "Any",
  "service" : "Any",
  "action" : "Accept",
  "track" : "Full Log",
  "install-on" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-rule <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "NTP Noise ${vpcid}",
  "source" : "${vpcid}",
  "destination" : "Any",
  "service" : "ntp",
  "action" : "Accept",
  "install-on" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-rule <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "DNS Noise ${vpcid}",
  "source" : "${vpcid}",
  "destination" : "${vpcid}",
  "service" : "dns",
  "action" : "Accept",
  "install-on" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-access-section <<.
{
  "layer" : "Network",
  "position" : "top",
  "name" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-nat-section <<.
{
  "package" : "standard",
  "position" : "top",
  "name" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-nat-rule <<.
{
  "package" : "standard",
  "position" : { "below" : "gw-${1}" },
  "enabled" : "true",
  "original-source" : "${subnetid0}",
  "translated-source" : "ext-gw-${1}",
  "method" : "hide",
  "install-on" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-nat-rule <<.
{
  "package" : "standard",
  "position" : { "below" : "gw-${1}" },
  "enabled" : "true",
  "original-service" : "http",
  "original-destination" : "ext-gw-${1}",
  "translated-destination" : "app-${1}",
  "method" : "static",
  "install-on" : "gw-${1}"
}
.


sleep 5

${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d @- $baseurl/add-nat-rule <<.
{
  "package" : "standard",
  "position" : { "below" : "gw-${1}" },
  "enabled" : "true",
  "original-source" : "${vpcid}",
  "original-destination" : "${vpcid}",
  "install-on" : "gw-${1}"
}
.


sleep 5

################################################################################################
# Publish and get out of here
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/publish

sleep 5

#Logout
${curl_cmd} -H "Content-Type: application/json" -H "X-chkp-sid: $SID" -d "{}" $baseurl/logout

exit 0
